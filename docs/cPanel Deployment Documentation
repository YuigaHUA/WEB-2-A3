🎗️ Charity Events App - Deployment Documentation
🌟 Project Information
Project Name: Charity Events Management System
Project Description: Full-stack charity events management platform
Technology Stack: Angular 17 + Node.js + Express + MySQL
Development Team: Fan & Jiang
Deployment Date: October 2025

🚀 Live Access URLs
Fan's Deployment Environment
Client Website: https://24516497.it.scu.edu.au/client/

Admin Website: https://24516497.it.scu.edu.au/admin/

API Endpoint: https://24516497.it.scu.edu.au/DataServ_2/api

Jiang's Deployment Environment
Client Website: https://24516646.it.scu.edu.au/client/

Admin Website: https://24516646.it.scu.edu.au/admin/

API Endpoint: https://24516646.it.scu.edu.au/DataServ_2/api

📁 Project Architecture
Frontend Applications (Angular 17)
text
public_html/
├── client/          # Client-side SPA Application
├── admin/           # Admin-side SPA Application
└── DataServ_2/      # Node.js Backend API
Backend API (Node.js + Express)
Framework: Express.js 4.18.2

Database: MySQL 8.0

Security: CORS, Input Validation

Environment: cPanel Node.js Environment

🗃️ Database Structure
Core Data Tables
events - Event information table

registrations - Event registration table

event_categories - Event categories table

Sample Data
Includes 6 event categories and 8 sample events covering environmental protection, education, medical assistance, community service, etc.

⚙️ Technical Features
Frontend Features
✅ Responsive design, mobile-friendly

✅ Component-based architecture

✅ TypeScript type safety

✅ RxJS state management

Backend Features
✅ RESTful API design

✅ Error handling middleware

✅ Database connection pooling

✅ Environment variable configuration

🔧 API Documentation
Event Management
Method	Endpoint	Description
GET	/api/events	Get all events
GET	/api/events/:id	Get event details
POST	/api/events	Create new event
PUT	/api/events/:id	Update event
DELETE	/api/events/:id	Delete event
Registration Management
Method	Endpoint	Description
POST	/api/registrations	Register for event
Category Management
Method	Endpoint	Description
GET	/api/categories	Get all categories
🎯 Feature Modules
Client-side Features (client/)
🔍 Event browsing and search

📄 Event details viewing

📝 Online event registration

👤 Registration record management

📱 Mobile adaptation

Admin-side Features (admin/)
⚡ Event CRUD management

📊 Data statistics dashboard

👥 Registration review management

🔧 Bulk operations support

📈 System monitoring

🔒 Security Configuration
Implemented Security Measures
CORS cross-origin configuration

Input data validation

SQL injection protection

XSS attack protection

HTTPS forced encryption

📊 Deployment Statistics
Application Size
Client-side build: ~500KB (compressed)

Admin-side build: ~550KB (compressed)

Backend API: ~50MB (including dependencies)

Performance Metrics
First load time: < 3 seconds

API response time: < 200ms

Database queries: < 100ms

🛠️ Maintenance Guide
Routine Maintenance
Monitor Application Status

Check Node.js application running status

Review error logs

Monitor database connections

Backup Strategy

Weekly database backups

Code version control

Environment configuration backups

Update Process
bash
# Frontend updates
ng build --configuration=production --base-href=/path/

# Backend updates
# Restart Node.js application or redeploy
🌐 Access Instructions
Test Accounts
Client-side: Direct access, no login required
Admin-side: Direct access, demo mode
